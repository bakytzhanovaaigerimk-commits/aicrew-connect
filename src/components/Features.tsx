'use client';

import { useEffect, useRef } from 'react';
import anime from 'animejs/lib/anime.es.js';

const features = [
  {
    icon: 'ü§ñ',
    title: 'AI-Powered Matching',
    description: '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–¥–±–æ—Ä –∫–æ–º–∞–Ω–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–≤—ã–∫–æ–≤, –æ–ø—ã—Ç–∞ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.'
  },
  {
    icon: 'üë•',
    title: 'Global Community',
    description: '–ü–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –∫ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ AI-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤.'
  },
  {
    icon: 'üöÄ',
    title: 'Fast Deployment',
    description: '–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –≥–æ—Ç–æ–≤—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏.'
  },
  {
    icon: 'üîí',
    title: 'Secure Collaboration',
    description: '–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –∑–∞—â–∏—Ç–æ–π –¥–∞–Ω–Ω—ã—Ö.'
  },
  {
    icon: 'üìä',
    title: 'Analytics & Insights',
    description: '–ì–ª—É–±–æ–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –∏ –ø—Ä–æ–µ–∫—Ç–æ–≤.'
  },
  {
    icon: '‚ö°',
    title: 'Real-time Communication',
    description: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ –∏ –æ–±–º–µ–Ω —Ñ–∞–π–ª–∞–º–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.'
  }
];

export default function Features() {
  const sectionRef = useRef<HTMLElement>(null);
  const titleRef = useRef<HTMLHeadingElement>(null);
  const cardsRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            anime({
              targets: titleRef.current,
              opacity: [0, 1],
              translateY: [50, 0],
              duration: 800,
              easing: 'easeOutExpo'
            });

            anime({
              targets: cardsRef.current?.children,
              opacity: [0, 1],
              translateY: [100, 0],
              scale: [0.8, 1],
              delay: anime.stagger(150),
              duration: 800,
              easing: 'easeOutExpo'
            });
          }
        });
      },
      { threshold: 0.1 }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => observer.disconnect();
  }, []);

  return (
    <section id="features" ref={sectionRef} className="py-20 px-6">
      <div className="max-w-7xl mx-auto">
        <h2
          ref={titleRef}
          className="text-5xl font-bold text-center text-white mb-16 opacity-0"
        >
          –ù–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
        </h2>

        <div ref={cardsRef} className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {features.map((feature, index) => (
            <div
              key={index}
              className="bg-white/10 backdrop-blur-lg rounded-2xl p-8 border border-white/20 hover:bg-white/20 transition-all duration-300 opacity-0"
            >
              <div className="text-4xl mb-6">{feature.icon}</div>
              <h3 className="text-2xl font-bold text-white mb-4">{feature.title}</h3>
              <p className="text-gray-300 leading-relaxed">{feature.description}</p>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}