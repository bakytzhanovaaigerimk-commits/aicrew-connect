const { Pool } = require('pg');

const pool = new Pool({
  connectionString: 'postgresql://neondb_owner:npg_xhHMfZ6Iz8dL@ep-morning-tooth-agnusonk-pooler.c-2.eu-central-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require',
  ssl: {
    rejectUnauthorized: false
  }
});

async function testDatabase() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

    // Insert test record
    const insertQuery = `
      INSERT INTO students (
        name, age, phone, email, course, program, tariff, telegram, parent_name, additional_info
      ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
      RETURNING *
    `;

    const testData = [
      '–¢–µ—Å—Ç–æ–≤—ã–π –°—Ç—É–¥–µ–Ω—Ç',
      15,
      '+7 777 123 4567',
      'test@example.com',
      'AI Creator',
      null,
      null,
      '@teststudent',
      null,
      '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏'
    ];

    const result = await pool.query(insertQuery, testData);
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞:', result.rows[0]);

    // Get all records
    const selectQuery = 'SELECT * FROM students ORDER BY created_at DESC';
    const allRecords = await pool.query(selectQuery);

    console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: ${allRecords.rows.length}`);
    console.log('üìã –í—Å–µ –∑–∞–ø–∏—Å–∏:');
    allRecords.rows.forEach((row, index) => {
      console.log(`  ${index + 1}. ${row.name} (${row.email}) - ${row.course}`);
    });

  } catch (error) {
    if (error.code === '23505') {
      console.log('‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (email –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º)');

      // Get all records anyway
      const selectQuery = 'SELECT * FROM students ORDER BY created_at DESC';
      const allRecords = await pool.query(selectQuery);

      console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: ${allRecords.rows.length}`);
      console.log('üìã –í—Å–µ –∑–∞–ø–∏—Å–∏:');
      allRecords.rows.forEach((row, index) => {
        console.log(`  ${index + 1}. ${row.name} (${row.email}) - ${row.course}`);
      });
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    }
  } finally {
    await pool.end();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
  }
}

testDatabase();